// Generated by CoffeeScript 1.7.1
(function() {
  var __slice = [].slice;

  module.exports = function(rawLinkHeader) {
    var attributeKey, attributeValue, attributes, index, input, key, links, match, piece, rawAttribute, rawAttributes, rawLink, rawLinks, rawUrlString, rel, urlString, value, _i, _j, _len, _len1, _ref, _ref1;
    if (!rawLinkHeader) {
      return false;
    }
    links = {};
    rawLinks = rawLinkHeader.split(',');
    for (_i = 0, _len = rawLinks.length; _i < _len; _i++) {
      rawLink = rawLinks[_i];
      _ref = (function() {
        var _j, _len1, _ref, _results;
        _ref = rawLink.split(';');
        _results = [];
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          piece = _ref[_j];
          _results.push(piece.trim());
        }
        return _results;
      })(), rawUrlString = _ref[0], rawAttributes = 2 <= _ref.length ? __slice.call(_ref, 1) : [];
      urlString = rawUrlString.match(/^<(\S+)>/)[1];
      attributes = {};
      for (_j = 0, _len1 = rawAttributes.length; _j < _len1; _j++) {
        rawAttribute = rawAttributes[_j];
        _ref1 = rawAttribute.match(/^(\w+)\*?=\"(.*)\"$/), match = _ref1[0], attributeKey = _ref1[1], attributeValue = _ref1[2], index = _ref1[3], input = _ref1[4];
        if (attributeKey === 'rel') {
          rel = attributeValue;
          links[rel] = {
            url: urlString
          };
        } else {
          attributes[attributeKey] = attributeValue;
        }
      }
      for (key in attributes) {
        value = attributes[key];
        links[rel][key] = value;
      }
    }
    return links;
  };

}).call(this);
